{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "ShiprocketAPI",
    "description": "A common dashboard to manage your entire business on various Marketplaces.",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "krmct001.kartrocket.co",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/v1/external/auth/login": {
      "post": {
        "tags": [
          "AUTHENTICATION"
        ],
        "description": "Get user and token from credentials",
        "summary": "Generate access token",
        "operationId": "Get token",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTokenResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/auth/login",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"email\": \"john@doe.com\",    \"password\": \"198372918\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"id\": 31,  \"first_name\": \"John\",  \"last_name\": \"Doe\",  \"email\": \"john@doe.com\",  \"company_id\": 34,  \"created_at\": \"2017-01-20 13:06:29\",  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUI1NiJ9.eyJzdWIiOjM1LCJpc3MiOiJodHRwOlwvXC9tdWx0aWNoYW5uZWwuYXBpXC92MVwvZXh0ZXJuYWxcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNDg1MTc1MzEwLCJleHAiOjE0ODUxODA3MTAsIm5iZiI6MTQ4NTE3NTMxMCwianRpIjoiMzNhYWE3Y2Q0NzExMWIxNDMzMGEzZDEwZTNiNjUxZDcifQ.mcRfqwcy3izqsbfwSf1p4Xakg_0N-Ms9iqkEqoIkY2Q\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get token1",
            "x-testDescription": "Get user and token from credentials"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Get a JSON representation of all countries",
        "summary": "Get all countries",
        "operationId": "Get countries",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCountriesResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/countries"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"status\": 200,  \"data\": [    {      \"id\": 1,      \"name\": \"Afghanistan\",      \"iso_code_2\": \"AF\",      \"iso_code_3\": \"AFG\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 2,      \"name\": \"Albania\",      \"iso_code_2\": \"AL\",      \"iso_code_3\": \"ALB\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 3,      \"name\": \"Algeria\",      \"iso_code_2\": \"DZ\",      \"iso_code_3\": \"DZA\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 4,      \"name\": \"American Samoa\",      \"iso_code_2\": \"AS\",      \"iso_code_3\": \"ASM\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 5,      \"name\": \"Andorra\",      \"iso_code_2\": \"AD\",      \"iso_code_3\": \"AND\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 6,      \"name\": \"Angola\",      \"iso_code_2\": \"AO\",      \"iso_code_3\": \"AGO\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 7,      \"name\": \"Anguilla\",      \"iso_code_2\": \"AI\",      \"iso_code_3\": \"AIA\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 8,      \"name\": \"Antarctica\",      \"iso_code_2\": \"AQ\",      \"iso_code_3\": \"ATA\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 9,      \"name\": \"Antigua and Barbuda\",      \"iso_code_2\": \"AG\",      \"iso_code_3\": \"ATG\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 10,      \"name\": \"Argentina\",      \"iso_code_2\": \"AR\",      \"iso_code_3\": \"ARG\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 11,      \"name\": \"Armenia\",      \"iso_code_2\": \"AM\",      \"iso_code_3\": \"ARM\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 12,      \"name\": \"Aruba\",      \"iso_code_2\": \"AW\",      \"iso_code_3\": \"ABW\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 13,      \"name\": \"Australia\",      \"iso_code_2\": \"AU\",      \"iso_code_3\": \"AUS\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 14,      \"name\": \"Austria\",      \"iso_code_2\": \"AT\",      \"iso_code_3\": \"AUT\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 15,      \"name\": \"Azerbaijan\",      \"iso_code_2\": \"AZ\",      \"iso_code_3\": \"AZE\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 16,      \"name\": \"Bahamas\",      \"iso_code_2\": \"BS\",      \"iso_code_3\": \"BHS\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 17,      \"name\": \"Bahrain\",      \"iso_code_2\": \"BH\",      \"iso_code_3\": \"BHR\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 18,      \"name\": \"Bangladesh\",      \"iso_code_2\": \"BD\",      \"iso_code_3\": \"BGD\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 19,      \"name\": \"Barbados\",      \"iso_code_2\": \"BB\",      \"iso_code_3\": \"BRB\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 20,      \"name\": \"Belarus\",      \"iso_code_2\": \"BY\",      \"iso_code_3\": \"BLR\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 21,      \"name\": \"Belgium\",      \"iso_code_2\": \"BE\",      \"iso_code_3\": \"BEL\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 22,      \"name\": \"Belize\",      \"iso_code_2\": \"BZ\",      \"iso_code_3\": \"BLZ\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 23,      \"name\": \"Benin\",      \"iso_code_2\": \"BJ\",      \"iso_code_3\": \"BEN\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 24,      \"name\": \"Bermuda\",      \"iso_code_2\": \"BM\",      \"iso_code_3\": \"BMU\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 25,      \"name\": \"Bhutan\",      \"iso_code_2\": \"BT\",      \"iso_code_3\": \"BTN\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 26,      \"name\": \"Bolivia\",      \"iso_code_2\": \"BO\",      \"iso_code_3\": \"BOL\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 27,      \"name\": \"Bosnia and Herzegowina\",      \"iso_code_2\": \"BA\",      \"iso_code_3\": \"BIH\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 28,      \"name\": \"Botswana\",      \"iso_code_2\": \"BW\",      \"iso_code_3\": \"BWA\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 29,      \"name\": \"Bouvet Island\",      \"iso_code_2\": \"BV\",      \"iso_code_3\": \"BVT\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 30,      \"name\": \"Brazil\",      \"iso_code_2\": \"BR\",      \"iso_code_3\": \"BRA\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 31,      \"name\": \"British Indian Ocean Territory\",      \"iso_code_2\": \"IO\",      \"iso_code_3\": \"IOT\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 32,      \"name\": \"Brunei Darussalam\",      \"iso_code_2\": \"BN\",      \"iso_code_3\": \"BRN\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 33,      \"name\": \"Bulgaria\",      \"iso_code_2\": \"BG\",      \"iso_code_3\": \"BGR\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 34,      \"name\": \"Burkina Faso\",      \"iso_code_2\": \"BF\",      \"iso_code_3\": \"BFA\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 35,      \"name\": \"Burundi\",      \"iso_code_2\": \"BI\",      \"iso_code_3\": \"BDI\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 36,      \"name\": \"Cambodia\",      \"iso_code_2\": \"KH\",      \"iso_code_3\": \"KHM\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 37,      \"name\": \"Cameroon\",      \"iso_code_2\": \"CM\",      \"iso_code_3\": \"CMR\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 38,      \"name\": \"Canada\",      \"iso_code_2\": \"CA\",      \"iso_code_3\": \"CAN\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 39,      \"name\": \"Cape Verde\",      \"iso_code_2\": \"CV\",      \"iso_code_3\": \"CPV\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 40,      \"name\": \"Cayman Islands\",      \"iso_code_2\": \"KY\",      \"iso_code_3\": \"CYM\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 41,      \"name\": \"Central African Republic\",      \"iso_code_2\": \"CF\",      \"iso_code_3\": \"CAF\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 42,      \"name\": \"Chad\",      \"iso_code_2\": \"TD\",      \"iso_code_3\": \"TCD\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 43,      \"name\": \"Chile\",      \"iso_code_2\": \"CL\",      \"iso_code_3\": \"CHL\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    },    {      \"id\": 44,      \"name\": \"China\",      \"iso_code_2\": \"CN\",      \"iso_code_3\": \"CHN\",      \"address_format\": \"\",      \"postcode_required\": 0,      \"status\": 1    }  ]}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get countries1",
            "x-testDescription": "Get a JSON representation of all countries"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/countries/show/{id}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "description": "Get all zones",
        "summary": "Get all zones of a country",
        "operationId": "Get zones",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Country id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetZonesResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get a JSON representation of all products",
        "summary": "Get all Products",
        "operationId": "Get products",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of products to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Add new product",
        "summary": "Add new Products",
        "operationId": "Add",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/products",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"sku\": \"Toys\",    \"name\": \"Batman Figurine\",    \"tax_code\": \"default\",    \"type\": \"Single\",    \"qty\": \"80\",    \"low_stock\": \"\",    \"category_code\": \"default\",    \"description\": \"\",    \"brand\": \"\",    \"size\": \"\",    \"weight\": \"\",    \"length\": \"\",    \"width\": \"\",    \"height\": \"\",    \"ean\": \"\",    \"upc\": \"\",    \"isbn\": \"\",    \"color\": \"\",    \"imei_serialnumber\": \"\",    \"cost_price\": \"\",    \"mrp\": \"\",    \"status\": 1,    \"image_url\": \"\",    \"components\": []}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add1",
            "x-testDescription": "Add new product"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/show/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Display single product details",
        "summary": "Get details of a single Product",
        "operationId": "Show",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShowResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/products/show/{id}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"data\": {    \"id\": 1,    \"sku\": \"dashdbsaj\",    \"name\": \"dsahbds\",    \"description\": \"\",    \"category_code\": \"default\",    \"category_name\": \"Default Category\",    \"category_tax_code\": \"default\",    \"image\": \"\",    \"weight\": \"0.50\",    \"size\": \"\",    \"cost_price\": \"0.00\",    \"mrp\": \"0.00\",    \"tax_code\": \"default\",    \"low_stock\": 0,    \"ean\": \"\",    \"upc\": \"\",    \"isbn\": \"\",    \"created_at\": \"4 Jan 2017 07:31 PM\",    \"updated_at\": \"4 Jan 2017 07:31 PM\",    \"quantity\": 46,    \"color\": \"\",    \"brand\": \"\",    \"dimensions\": \"10.00 x 10.00 x 10.00\",    \"status\": \"ACTIVE\",    \"is_combo\": 0  }}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Show1",
            "x-testDescription": "Display single product details"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/import": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Import CSV containing products data",
        "summary": "Import Products in bulk",
        "operationId": "Bulk import",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/products/import",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"file\": \"\u003cfile to import\u003e\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Bulk import1",
            "x-testDescription": "Import CSV containing products data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/export": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Export CSV file containing company's products data",
        "summary": "Export Products in bulk",
        "operationId": "Bulk export",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/products/export"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    \"csvdata\"]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Bulk export1",
            "x-testDescription": "Export CSV file containing company's products data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/sample": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Export a sample CSV file for importing",
        "summary": "Get a sample format to Import Products",
        "operationId": "Bulk sample",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/products/sample"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    \"csvdata\"]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Bulk sample1",
            "x-testDescription": "Export a sample CSV file for importing"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/update/imei": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Update product IMEI",
        "summary": "Update IMEI of a Product",
        "operationId": "Update IMEI",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateImeiRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/products/update/imei",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"data\": [{        \"order_product_id\": 9,        \"imei\": \"28921797BGSV\"    },{        \"order_product_id\" : 8,        \"imei\":\"JKBS3290482\"    }]}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update IMEI1",
            "x-testDescription": "Update product IMEI"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Get a JSON representation of all listings",
        "summary": "Get all Listings",
        "operationId": "Get all",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of listings to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/listings/import": {
      "post": {
        "tags": [
          "Listings"
        ],
        "description": "Import CSV containing channel catalog to master catalog mappings",
        "summary": "Import Catalog mappings",
        "operationId": "Bulk import1",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/listings/import",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"file\": \"\u003cfile to import\u003e\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Bulk import1",
            "x-testDescription": "Import CSV containing channel catalog to master catalog mappings"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/listings/export/mapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export CSV file containing mapped channel catalog data",
        "summary": "Export mapped Catalog details",
        "operationId": "Export mapped",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/listings/export/mapped"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    \"csvdata\"]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Export mapped1",
            "x-testDescription": "Export CSV file containing mapped channel catalog data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/listings/export/unmapped": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export CSV file containing un-mapped channel catalog data",
        "summary": "Export unmapped Catalog details",
        "operationId": "Export un-mapped",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/listings/export/unmapped"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    \"csvdata\"]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Export un-mapped1",
            "x-testDescription": "Export CSV file containing un-mapped channel catalog data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/listings/export/sample": {
      "get": {
        "tags": [
          "Listings"
        ],
        "description": "Export sample CSV file for import listings",
        "summary": "Export sample format to import listings",
        "operationId": "Export sample",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/listings/export/sample"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    \"csvdata\"]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Export sample1",
            "x-testDescription": "Export sample CSV file for import"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/listings/link": {
      "post": {
        "tags": [
          "Listings"
        ],
        "description": "Map channel catalog to master catalog",
        "summary": "Map channel Catalog to master Catalog",
        "operationId": "Map",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/listings/link",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"product_id\": 91,    \"listing_id\": 21}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Map1",
            "x-testDescription": "Map channel catalog to master catalog"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of all orders",
        "summary": "Get all orders",
        "operationId": "Get all orders",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          }, {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }, {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllOrdersResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/unprocessable": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of all unprocessable orders",
        "summary": "Get all unprocessable orders",
        "operationId": "Get all unprocessable orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllUnprocessableOrdersResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/unprocessable"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"data\": [{    \"id\": 2835,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"123456\",    \"customer_name\": \"John Doe\",    \"customer_email\": \"johndoe@example.com\",    \"customer_phone\": \"9999999999\",    \"payment_status\": \"\",    \"total\": \"79.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"NEW\",    \"status_code\": 1,    \"payment_method\": \"cod\",    \"channel_created_at\": \"13 Sep 16, 11:45 PM\",    \"created_at\": \"13 Sep 16, 11:45 PM\",    \"products\": [{      \"id\": 2588,      \"channel_order_product_id\": \"322\",      \"name\": \"New product\",      \"channel_sku\": \"ABCD123\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2835,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2304,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"404-8000847-8863509\",    \"customer_name\": \"Harish kumar badisa\",    \"customer_email\": \"1wl1f4kj9tgpkd2@marketplace.amazon.in\",    \"customer_phone\": \"9299904615\",    \"payment_status\": \"\",    \"total\": \"1935.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"7 Sep 16, 08:19 AM\",    \"created_at\": \"7 Sep 16, 02:30 PM\",    \"products\": [{      \"id\": 2577,      \"channel_order_product_id\": \"13810481167563\",      \"name\": \"Black \u0026 Decker G720R 4-Inch/100mm 820-Watt Angle Grinder\",      \"channel_sku\": \"B\u0026D-G720\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2304,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2293,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-6663700-7373915\",    \"customer_name\": \"Parag Gadgil\",    \"customer_email\": \"14sp7qvtgd0lxm6@marketplace.amazon.in\",    \"customer_phone\": \"9922080922\",    \"payment_status\": \"\",    \"total\": \"2545.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"6 Sep 16, 10:22 AM\",    \"created_at\": \"6 Sep 16, 05:30 PM\",    \"products\": [{      \"id\": 2566,      \"channel_order_product_id\": \"19002651668963\",      \"name\": \"Black \u0026 Decker KS700PE 480-Watt Variable Speed Pendulum Jigsaw\",      \"channel_sku\": \"B\u0026D-KS700PE\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2293,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2286,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-8781295-5529161\",    \"customer_name\": \"ROHIT GANGA DEB\",    \"customer_email\": \"5pjcxfbh4cg5c5k@marketplace.amazon.in\",    \"customer_phone\": \"9937636446\",    \"payment_status\": \"\",    \"total\": \"2035.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"Other\",    \"channel_created_at\": \"5 Sep 16, 07:39 AM\",    \"created_at\": \"5 Sep 16, 02:00 PM\",    \"products\": [{      \"id\": 2559,      \"channel_order_product_id\": \"63310534052747\",      \"name\": \"Skil 7335 Orbital Sander 160W 93x230mm\",      \"channel_sku\": \"S-7335\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2286,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2278,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"3498483489\",    \"customer_name\": \"iodwuidsiud \",    \"customer_email\": \"dwieudiuE@ddjdks.com\",    \"customer_phone\": \"7834783478\",    \"payment_status\": \"\",    \"total\": \"0.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"PICKUP SCHEDULED\",    \"status_code\": 4,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"13 Sep 16, 04:33 PM\",    \"created_at\": \"1 Sep 16, 04:33 PM\",    \"products\": [{      \"id\": 2551,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2278,      \"courier\": \"FEDEX\",      \"weight\": \"0.5\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"783975617971\"    }],    \"activities\": [\"ORDER_FETCHED\", \"DIMENSIONS_EDITED\", \"DIRECT_INVOICED\", \"LABEL_GENERATED\", \"MANIFEST_SCHEDULED\"]  }, {    \"id\": 2277,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"8394444444\",    \"customer_name\": \"locdijkdjs nkddjcndskjc\",    \"customer_email\": \"djks@kjsd.com\",    \"customer_phone\": \"9871727172\",    \"payment_status\": \"\",    \"total\": \"551.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"OUT OF STOCK\",    \"status_code\": 11,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"14 Sep 16, 04:19 PM\",    \"created_at\": \"1 Sep 16, 04:19 PM\",    \"products\": [{      \"id\": 2550,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 29,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"OUT OF STOCK\"    }],    \"shipments\": [{      \"id\": 2277,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2276,    \"channel_id\": 127,    \"channel_name\": \"MAGENTO\",    \"base_channel_code\": \"MG\",    \"channel_order_id\": \"2\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajat.hans@kartrocket.com\",    \"customer_phone\": \"+919873786395\",    \"payment_status\": \"\",    \"total\": \"14035.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"cod\",    \"channel_created_at\": \"27 Aug 16, 10:17 AM\",    \"created_at\": \"1 Sep 16, 04:15 PM\",    \"products\": [{      \"id\": 2549,      \"channel_order_product_id\": \"2\",      \"name\": \"Grow\",      \"channel_sku\": \"SKU4\",      \"quantity\": 7,      \"product_id\": 319,      \"available\": 79,      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2276,      \"courier\": \"\",      \"weight\": \"1\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"PRODUCT_MAPPED\", \"INVOICED\", \"DIMENSIONS_EDITED\"]  }, {    \"id\": 2275,    \"channel_id\": 127,    \"channel_name\": \"MAGENTO\",    \"base_channel_code\": \"MG\",    \"channel_order_id\": \"1\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajat.hans@kartrocket.com\",    \"customer_phone\": \"+919873786395\",    \"payment_status\": \"\",    \"total\": \"8020.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"checkmo\",    \"channel_created_at\": \"27 Aug 16, 10:15 AM\",    \"created_at\": \"1 Sep 16, 04:15 PM\",    \"products\": [{      \"id\": 2548,      \"channel_order_product_id\": \"1\",      \"name\": \"Grow\",      \"channel_sku\": \"SKU4\",      \"quantity\": 4,      \"product_id\": 319,      \"available\": 79,      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2275,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"PRODUCT_MAPPED\", \"INVOICED\"]  }, {    \"id\": 2274,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-5213676-1382749\",    \"customer_name\": \"Raghavendra\",    \"customer_email\": \"n95nnl5pmbrclzx@marketplace.amazon.in\",    \"customer_phone\": \"7083774943\",    \"payment_status\": \"\",    \"total\": \"5100.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"31 Aug 16, 12:38 PM\",    \"created_at\": \"31 Aug 16, 07:00 PM\",    \"products\": [{      \"id\": 2547,      \"channel_order_product_id\": \"27863886623339\",      \"name\": \"Black \u0026 Decker CS1500 Watt 185mm Wood Cutting Circular Saw\",      \"channel_sku\": \"B\u0026D-CS1500\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2274,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2273,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"23222222222222\",    \"customer_name\": \"lkdfkjdfjkfkj ksjdkjdfdfjdfjk\",    \"customer_email\": \"kmdskjscdcj@JKkjdcdsk.com\",    \"customer_phone\": \"3232233223\",    \"payment_status\": \"\",    \"total\": \"12.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"17 Aug 16, 02:18 PM\",    \"created_at\": \"31 Aug 16, 02:18 PM\",    \"products\": [{      \"id\": 2546,      \"channel_order_product_id\": \"348\",      \"name\": \"m.,,m.\",      \"channel_sku\": \"kmkkm12323\",      \"quantity\": 12,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2273,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"INVENTORY_ALLOCATED\", \"DIMENSIONS_EDITED\", \"DIMENSIONS_EDITED\", \"CUSTOM_FIELD_UPDATED\", \"INVOICED\"]  }, {    \"id\": 2267,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"402-3943702-0620350\",    \"customer_name\": \"sudhir daswani\",    \"customer_email\": \"q51vvnt4kcrkd1w@marketplace.amazon.in\",    \"customer_phone\": \"9826087087\",    \"payment_status\": \"\",    \"total\": \"3799.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"Other\",    \"channel_created_at\": \"27 Aug 16, 02:02 PM\",    \"created_at\": \"27 Aug 16, 08:30 PM\",    \"products\": [{      \"id\": 2540,      \"channel_order_product_id\": \"13612069307691\",      \"name\": \"Black and Decker EPC12K2 12-Volts Cordless Drill\",      \"channel_sku\": \"B\u0026D-EPC12K2\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2267,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2262,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"42874t23\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajathans@gmail.com\",    \"customer_phone\": \"9873786395\",    \"payment_status\": \"\",    \"total\": \"84.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"NEW\",    \"status_code\": 1,    \"payment_method\": \"cod\",    \"channel_created_at\": \"10 Aug 16, 12:19 PM\",    \"created_at\": \"26 Aug 16, 12:19 PM\",    \"products\": [{      \"id\": 2535,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 4,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2262,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2261,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-1269002-4868339\",    \"customer_name\": \"vissu\",    \"customer_email\": \"65cr98d4cxds1c2@marketplace.amazon.in\",    \"customer_phone\": \"9949770777\",    \"payment_status\": \"\",    \"total\": \"5290.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 0,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"24 Aug 16, 10:20 AM\",    \"created_at\": \"24 Aug 16, 04:30 PM\",    \"products\": [{      \"id\": 2534,      \"channel_order_product_id\": \"00539831542555\",      \"name\": \"Skil 9080 JF Car Polisher (1300W)\",      \"channel_sku\": \"S-9080\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2261,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2260,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-1943442-9609960\",    \"customer_name\": \"Avinash S Poojary\",    \"customer_email\": \"g1cmpdbbd54xbr3@marketplace.amazon.in\",    \"customer_phone\": \"9916281211\",    \"payment_status\": \"\",    \"total\": \"3115.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"CANCELED\",    \"status_code\": 5,    \"payment_method\": \"cod\",    \"channel_created_at\": \"24 Aug 16, 03:49 AM\",    \"created_at\": \"24 Aug 16, 10:00 AM\",    \"products\": [{      \"id\": 2533,      \"channel_order_product_id\": \"05457018968731\",      \"name\": \"ASP Polyplast Kitchenpride Plastic Round Full Plates , 30Cm , Set of 6 , White\",      \"channel_sku\": \"ASP-001-13\",      \"quantity\": 7,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"CANCELED\"    }],    \"shipments\": [{      \"id\": 2260,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2256,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-0317324-3643508\",    \"customer_name\": \"Avinash S Poojary\",    \"customer_email\": \"g1cmpdbbd54xbr3@marketplace.amazon.in\",    \"customer_phone\": \"9916281211\",    \"payment_status\": \"\",    \"total\": \"1395.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"12 Aug 16, 01:10 PM\",    \"created_at\": \"12 Aug 16, 07:31 PM\",    \"products\": [{      \"id\": 2529,      \"channel_order_product_id\": \"28681229839419\",      \"name\": \"ASP Polyplast Kitchenpride Plastic Square Full Plates , 30?30cm , set of 6 ,White\",      \"channel_sku\": \"ASP-001-15\",      \"quantity\": 3,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2256,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }],  \"meta\": {    \"pagination\": {      \"total\": 139,      \"count\": 15,      \"per_page\": 15,      \"current_page\": 1,      \"total_pages\": 10,      \"links\": {        \"next\": \"http://krmct001.kartrocket.com/v1/orders?page=2\"      }    }  }}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get all unprocessable orders1",
            "x-testDescription": "Get a JSON representation of all unprocessable orders"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/processing": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of orders in processing",
        "summary": "Get orders in Processing",
        "operationId": "Get all processing orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllProcessingOrdersResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/processing"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"data\": [{    \"id\": 2835,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"123456\",    \"customer_name\": \"John Doe\",    \"customer_email\": \"johndoe@example.com\",    \"customer_phone\": \"9999999999\",    \"payment_status\": \"\",    \"total\": \"79.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"NEW\",    \"status_code\": 1,    \"payment_method\": \"cod\",    \"channel_created_at\": \"13 Sep 16, 11:45 PM\",    \"created_at\": \"13 Sep 16, 11:45 PM\",    \"products\": [{      \"id\": 2588,      \"channel_order_product_id\": \"322\",      \"name\": \"New product\",      \"channel_sku\": \"ABCD123\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2835,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2304,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"404-8000847-8863509\",    \"customer_name\": \"Harish kumar badisa\",    \"customer_email\": \"1wl1f4kj9tgpkd2@marketplace.amazon.in\",    \"customer_phone\": \"9299904615\",    \"payment_status\": \"\",    \"total\": \"1935.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"7 Sep 16, 08:19 AM\",    \"created_at\": \"7 Sep 16, 02:30 PM\",    \"products\": [{      \"id\": 2577,      \"channel_order_product_id\": \"13810481167563\",      \"name\": \"Black \u0026 Decker G720R 4-Inch/100mm 820-Watt Angle Grinder\",      \"channel_sku\": \"B\u0026D-G720\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2304,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2293,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-6663700-7373915\",    \"customer_name\": \"Parag Gadgil\",    \"customer_email\": \"14sp7qvtgd0lxm6@marketplace.amazon.in\",    \"customer_phone\": \"9922080922\",    \"payment_status\": \"\",    \"total\": \"2545.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"6 Sep 16, 10:22 AM\",    \"created_at\": \"6 Sep 16, 05:30 PM\",    \"products\": [{      \"id\": 2566,      \"channel_order_product_id\": \"19002651668963\",      \"name\": \"Black \u0026 Decker KS700PE 480-Watt Variable Speed Pendulum Jigsaw\",      \"channel_sku\": \"B\u0026D-KS700PE\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2293,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2286,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-8781295-5529161\",    \"customer_name\": \"ROHIT GANGA DEB\",    \"customer_email\": \"5pjcxfbh4cg5c5k@marketplace.amazon.in\",    \"customer_phone\": \"9937636446\",    \"payment_status\": \"\",    \"total\": \"2035.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"Other\",    \"channel_created_at\": \"5 Sep 16, 07:39 AM\",    \"created_at\": \"5 Sep 16, 02:00 PM\",    \"products\": [{      \"id\": 2559,      \"channel_order_product_id\": \"63310534052747\",      \"name\": \"Skil 7335 Orbital Sander 160W 93x230mm\",      \"channel_sku\": \"S-7335\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2286,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2278,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"3498483489\",    \"customer_name\": \"iodwuidsiud \",    \"customer_email\": \"dwieudiuE@ddjdks.com\",    \"customer_phone\": \"7834783478\",    \"payment_status\": \"\",    \"total\": \"0.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"PICKUP SCHEDULED\",    \"status_code\": 4,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"13 Sep 16, 04:33 PM\",    \"created_at\": \"1 Sep 16, 04:33 PM\",    \"products\": [{      \"id\": 2551,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2278,      \"courier\": \"FEDEX\",      \"weight\": \"0.5\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"783975617971\"    }],    \"activities\": [\"ORDER_FETCHED\", \"DIMENSIONS_EDITED\", \"DIRECT_INVOICED\", \"LABEL_GENERATED\", \"MANIFEST_SCHEDULED\"]  }, {    \"id\": 2277,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"8394444444\",    \"customer_name\": \"locdijkdjs nkddjcndskjc\",    \"customer_email\": \"djks@kjsd.com\",    \"customer_phone\": \"9871727172\",    \"payment_status\": \"\",    \"total\": \"551.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"OUT OF STOCK\",    \"status_code\": 11,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"14 Sep 16, 04:19 PM\",    \"created_at\": \"1 Sep 16, 04:19 PM\",    \"products\": [{      \"id\": 2550,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 29,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"OUT OF STOCK\"    }],    \"shipments\": [{      \"id\": 2277,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2276,    \"channel_id\": 127,    \"channel_name\": \"MAGENTO\",    \"base_channel_code\": \"MG\",    \"channel_order_id\": \"2\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajat.hans@kartrocket.com\",    \"customer_phone\": \"+919873786395\",    \"payment_status\": \"\",    \"total\": \"14035.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"cod\",    \"channel_created_at\": \"27 Aug 16, 10:17 AM\",    \"created_at\": \"1 Sep 16, 04:15 PM\",    \"products\": [{      \"id\": 2549,      \"channel_order_product_id\": \"2\",      \"name\": \"Grow\",      \"channel_sku\": \"SKU4\",      \"quantity\": 7,      \"product_id\": 319,      \"available\": 79,      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2276,      \"courier\": \"\",      \"weight\": \"1\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"PRODUCT_MAPPED\", \"INVOICED\", \"DIMENSIONS_EDITED\"]  }, {    \"id\": 2275,    \"channel_id\": 127,    \"channel_name\": \"MAGENTO\",    \"base_channel_code\": \"MG\",    \"channel_order_id\": \"1\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajat.hans@kartrocket.com\",    \"customer_phone\": \"+919873786395\",    \"payment_status\": \"\",    \"total\": \"8020.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"checkmo\",    \"channel_created_at\": \"27 Aug 16, 10:15 AM\",    \"created_at\": \"1 Sep 16, 04:15 PM\",    \"products\": [{      \"id\": 2548,      \"channel_order_product_id\": \"1\",      \"name\": \"Grow\",      \"channel_sku\": \"SKU4\",      \"quantity\": 4,      \"product_id\": 319,      \"available\": 79,      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2275,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"PRODUCT_MAPPED\", \"INVOICED\"]  }, {    \"id\": 2274,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-5213676-1382749\",    \"customer_name\": \"Raghavendra\",    \"customer_email\": \"n95nnl5pmbrclzx@marketplace.amazon.in\",    \"customer_phone\": \"7083774943\",    \"payment_status\": \"\",    \"total\": \"5100.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"31 Aug 16, 12:38 PM\",    \"created_at\": \"31 Aug 16, 07:00 PM\",    \"products\": [{      \"id\": 2547,      \"channel_order_product_id\": \"27863886623339\",      \"name\": \"Black \u0026 Decker CS1500 Watt 185mm Wood Cutting Circular Saw\",      \"channel_sku\": \"B\u0026D-CS1500\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2274,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2273,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"23222222222222\",    \"customer_name\": \"lkdfkjdfjkfkj ksjdkjdfdfjdfjk\",    \"customer_email\": \"kmdskjscdcj@JKkjdcdsk.com\",    \"customer_phone\": \"3232233223\",    \"payment_status\": \"\",    \"total\": \"12.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"17 Aug 16, 02:18 PM\",    \"created_at\": \"31 Aug 16, 02:18 PM\",    \"products\": [{      \"id\": 2546,      \"channel_order_product_id\": \"348\",      \"name\": \"m.,,m.\",      \"channel_sku\": \"kmkkm12323\",      \"quantity\": 12,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2273,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"INVENTORY_ALLOCATED\", \"DIMENSIONS_EDITED\", \"DIMENSIONS_EDITED\", \"CUSTOM_FIELD_UPDATED\", \"INVOICED\"]  }, {    \"id\": 2267,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"402-3943702-0620350\",    \"customer_name\": \"sudhir daswani\",    \"customer_email\": \"q51vvnt4kcrkd1w@marketplace.amazon.in\",    \"customer_phone\": \"9826087087\",    \"payment_status\": \"\",    \"total\": \"3799.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"Other\",    \"channel_created_at\": \"27 Aug 16, 02:02 PM\",    \"created_at\": \"27 Aug 16, 08:30 PM\",    \"products\": [{      \"id\": 2540,      \"channel_order_product_id\": \"13612069307691\",      \"name\": \"Black and Decker EPC12K2 12-Volts Cordless Drill\",      \"channel_sku\": \"B\u0026D-EPC12K2\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2267,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2262,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"42874t23\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajathans@gmail.com\",    \"customer_phone\": \"9873786395\",    \"payment_status\": \"\",    \"total\": \"84.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"NEW\",    \"status_code\": 1,    \"payment_method\": \"cod\",    \"channel_created_at\": \"10 Aug 16, 12:19 PM\",    \"created_at\": \"26 Aug 16, 12:19 PM\",    \"products\": [{      \"id\": 2535,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 4,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2262,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2261,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-1269002-4868339\",    \"customer_name\": \"vissu\",    \"customer_email\": \"65cr98d4cxds1c2@marketplace.amazon.in\",    \"customer_phone\": \"9949770777\",    \"payment_status\": \"\",    \"total\": \"5290.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 0,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"24 Aug 16, 10:20 AM\",    \"created_at\": \"24 Aug 16, 04:30 PM\",    \"products\": [{      \"id\": 2534,      \"channel_order_product_id\": \"00539831542555\",      \"name\": \"Skil 9080 JF Car Polisher (1300W)\",      \"channel_sku\": \"S-9080\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2261,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2260,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-1943442-9609960\",    \"customer_name\": \"Avinash S Poojary\",    \"customer_email\": \"g1cmpdbbd54xbr3@marketplace.amazon.in\",    \"customer_phone\": \"9916281211\",    \"payment_status\": \"\",    \"total\": \"3115.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"CANCELED\",    \"status_code\": 5,    \"payment_method\": \"cod\",    \"channel_created_at\": \"24 Aug 16, 03:49 AM\",    \"created_at\": \"24 Aug 16, 10:00 AM\",    \"products\": [{      \"id\": 2533,      \"channel_order_product_id\": \"05457018968731\",      \"name\": \"ASP Polyplast Kitchenpride Plastic Round Full Plates , 30Cm , Set of 6 , White\",      \"channel_sku\": \"ASP-001-13\",      \"quantity\": 7,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"CANCELED\"    }],    \"shipments\": [{      \"id\": 2260,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2256,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-0317324-3643508\",    \"customer_name\": \"Avinash S Poojary\",    \"customer_email\": \"g1cmpdbbd54xbr3@marketplace.amazon.in\",    \"customer_phone\": \"9916281211\",    \"payment_status\": \"\",    \"total\": \"1395.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"12 Aug 16, 01:10 PM\",    \"created_at\": \"12 Aug 16, 07:31 PM\",    \"products\": [{      \"id\": 2529,      \"channel_order_product_id\": \"28681229839419\",      \"name\": \"ASP Polyplast Kitchenpride Plastic Square Full Plates , 30?30cm , set of 6 ,White\",      \"channel_sku\": \"ASP-001-15\",      \"quantity\": 3,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2256,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }],  \"meta\": {    \"pagination\": {      \"total\": 139,      \"count\": 15,      \"per_page\": 15,      \"current_page\": 1,      \"total_pages\": 10,      \"links\": {        \"next\": \"http://krmct001.kartrocket.com/v1/orders?page=2\"      }    }  }}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get all processing orders1",
            "x-testDescription": "Get a JSON representation of orders in processing"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/manifested": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get a JSON representation of all manifest stage orders",
        "summary": "Get manifested orders",
        "operationId": "Get all manifested orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAllManifestedOrdersResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/manifested"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"data\": [{    \"id\": 2835,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"123456\",    \"customer_name\": \"John Doe\",    \"customer_email\": \"johndoe@example.com\",    \"customer_phone\": \"9999999999\",    \"payment_status\": \"\",    \"total\": \"79.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"NEW\",    \"status_code\": 1,    \"payment_method\": \"cod\",    \"channel_created_at\": \"13 Sep 16, 11:45 PM\",    \"created_at\": \"13 Sep 16, 11:45 PM\",    \"products\": [{      \"id\": 2588,      \"channel_order_product_id\": \"322\",      \"name\": \"New product\",      \"channel_sku\": \"ABCD123\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2835,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2304,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"404-8000847-8863509\",    \"customer_name\": \"Harish kumar badisa\",    \"customer_email\": \"1wl1f4kj9tgpkd2@marketplace.amazon.in\",    \"customer_phone\": \"9299904615\",    \"payment_status\": \"\",    \"total\": \"1935.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"7 Sep 16, 08:19 AM\",    \"created_at\": \"7 Sep 16, 02:30 PM\",    \"products\": [{      \"id\": 2577,      \"channel_order_product_id\": \"13810481167563\",      \"name\": \"Black \u0026 Decker G720R 4-Inch/100mm 820-Watt Angle Grinder\",      \"channel_sku\": \"B\u0026D-G720\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2304,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2293,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-6663700-7373915\",    \"customer_name\": \"Parag Gadgil\",    \"customer_email\": \"14sp7qvtgd0lxm6@marketplace.amazon.in\",    \"customer_phone\": \"9922080922\",    \"payment_status\": \"\",    \"total\": \"2545.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"6 Sep 16, 10:22 AM\",    \"created_at\": \"6 Sep 16, 05:30 PM\",    \"products\": [{      \"id\": 2566,      \"channel_order_product_id\": \"19002651668963\",      \"name\": \"Black \u0026 Decker KS700PE 480-Watt Variable Speed Pendulum Jigsaw\",      \"channel_sku\": \"B\u0026D-KS700PE\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2293,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2286,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-8781295-5529161\",    \"customer_name\": \"ROHIT GANGA DEB\",    \"customer_email\": \"5pjcxfbh4cg5c5k@marketplace.amazon.in\",    \"customer_phone\": \"9937636446\",    \"payment_status\": \"\",    \"total\": \"2035.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"Other\",    \"channel_created_at\": \"5 Sep 16, 07:39 AM\",    \"created_at\": \"5 Sep 16, 02:00 PM\",    \"products\": [{      \"id\": 2559,      \"channel_order_product_id\": \"63310534052747\",      \"name\": \"Skil 7335 Orbital Sander 160W 93x230mm\",      \"channel_sku\": \"S-7335\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2286,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2278,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"3498483489\",    \"customer_name\": \"iodwuidsiud \",    \"customer_email\": \"dwieudiuE@ddjdks.com\",    \"customer_phone\": \"7834783478\",    \"payment_status\": \"\",    \"total\": \"0.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"PICKUP SCHEDULED\",    \"status_code\": 4,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"13 Sep 16, 04:33 PM\",    \"created_at\": \"1 Sep 16, 04:33 PM\",    \"products\": [{      \"id\": 2551,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2278,      \"courier\": \"FEDEX\",      \"weight\": \"0.5\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"783975617971\"    }],    \"activities\": [\"ORDER_FETCHED\", \"DIMENSIONS_EDITED\", \"DIRECT_INVOICED\", \"LABEL_GENERATED\", \"MANIFEST_SCHEDULED\"]  }, {    \"id\": 2277,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"8394444444\",    \"customer_name\": \"locdijkdjs nkddjcndskjc\",    \"customer_email\": \"djks@kjsd.com\",    \"customer_phone\": \"9871727172\",    \"payment_status\": \"\",    \"total\": \"551.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"OUT OF STOCK\",    \"status_code\": 11,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"14 Sep 16, 04:19 PM\",    \"created_at\": \"1 Sep 16, 04:19 PM\",    \"products\": [{      \"id\": 2550,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 29,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"OUT OF STOCK\"    }],    \"shipments\": [{      \"id\": 2277,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2276,    \"channel_id\": 127,    \"channel_name\": \"MAGENTO\",    \"base_channel_code\": \"MG\",    \"channel_order_id\": \"2\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajat.hans@kartrocket.com\",    \"customer_phone\": \"+919873786395\",    \"payment_status\": \"\",    \"total\": \"14035.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"cod\",    \"channel_created_at\": \"27 Aug 16, 10:17 AM\",    \"created_at\": \"1 Sep 16, 04:15 PM\",    \"products\": [{      \"id\": 2549,      \"channel_order_product_id\": \"2\",      \"name\": \"Grow\",      \"channel_sku\": \"SKU4\",      \"quantity\": 7,      \"product_id\": 319,      \"available\": 79,      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2276,      \"courier\": \"\",      \"weight\": \"1\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"PRODUCT_MAPPED\", \"INVOICED\", \"DIMENSIONS_EDITED\"]  }, {    \"id\": 2275,    \"channel_id\": 127,    \"channel_name\": \"MAGENTO\",    \"base_channel_code\": \"MG\",    \"channel_order_id\": \"1\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajat.hans@kartrocket.com\",    \"customer_phone\": \"+919873786395\",    \"payment_status\": \"\",    \"total\": \"8020.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"checkmo\",    \"channel_created_at\": \"27 Aug 16, 10:15 AM\",    \"created_at\": \"1 Sep 16, 04:15 PM\",    \"products\": [{      \"id\": 2548,      \"channel_order_product_id\": \"1\",      \"name\": \"Grow\",      \"channel_sku\": \"SKU4\",      \"quantity\": 4,      \"product_id\": 319,      \"available\": 79,      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2275,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"PRODUCT_MAPPED\", \"INVOICED\"]  }, {    \"id\": 2274,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-5213676-1382749\",    \"customer_name\": \"Raghavendra\",    \"customer_email\": \"n95nnl5pmbrclzx@marketplace.amazon.in\",    \"customer_phone\": \"7083774943\",    \"payment_status\": \"\",    \"total\": \"5100.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"31 Aug 16, 12:38 PM\",    \"created_at\": \"31 Aug 16, 07:00 PM\",    \"products\": [{      \"id\": 2547,      \"channel_order_product_id\": \"27863886623339\",      \"name\": \"Black \u0026 Decker CS1500 Watt 185mm Wood Cutting Circular Saw\",      \"channel_sku\": \"B\u0026D-CS1500\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2274,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2273,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"23222222222222\",    \"customer_name\": \"lkdfkjdfjkfkj ksjdkjdfdfjdfjk\",    \"customer_email\": \"kmdskjscdcj@JKkjdcdsk.com\",    \"customer_phone\": \"3232233223\",    \"payment_status\": \"\",    \"total\": \"12.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"INVOICED\",    \"status_code\": 2,    \"payment_method\": \"Bank Transfer\",    \"channel_created_at\": \"17 Aug 16, 02:18 PM\",    \"created_at\": \"31 Aug 16, 02:18 PM\",    \"products\": [{      \"id\": 2546,      \"channel_order_product_id\": \"348\",      \"name\": \"m.,,m.\",      \"channel_sku\": \"kmkkm12323\",      \"quantity\": 12,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2273,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10 x 10 x 10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\", \"INVENTORY_ALLOCATED\", \"DIMENSIONS_EDITED\", \"DIMENSIONS_EDITED\", \"CUSTOM_FIELD_UPDATED\", \"INVOICED\"]  }, {    \"id\": 2267,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"402-3943702-0620350\",    \"customer_name\": \"sudhir daswani\",    \"customer_email\": \"q51vvnt4kcrkd1w@marketplace.amazon.in\",    \"customer_phone\": \"9826087087\",    \"payment_status\": \"\",    \"total\": \"3799.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"Other\",    \"channel_created_at\": \"27 Aug 16, 02:02 PM\",    \"created_at\": \"27 Aug 16, 08:30 PM\",    \"products\": [{      \"id\": 2540,      \"channel_order_product_id\": \"13612069307691\",      \"name\": \"Black and Decker EPC12K2 12-Volts Cordless Drill\",      \"channel_sku\": \"B\u0026D-EPC12K2\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2267,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2262,    \"channel_id\": 89,    \"channel_name\": \"CUSTOM\",    \"base_channel_code\": \"CS\",    \"channel_order_id\": \"42874t23\",    \"customer_name\": \"Rajat Hans\",    \"customer_email\": \"rajathans@gmail.com\",    \"customer_phone\": \"9873786395\",    \"payment_status\": \"\",    \"total\": \"84.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SR\",    \"expedited\": 0,    \"status\": \"NEW\",    \"status_code\": 1,    \"payment_method\": \"cod\",    \"channel_created_at\": \"10 Aug 16, 12:19 PM\",    \"created_at\": \"26 Aug 16, 12:19 PM\",    \"products\": [{      \"id\": 2535,      \"channel_order_product_id\": \"315\",      \"name\": \"Tshirt\",      \"channel_sku\": \"SKU1\",      \"quantity\": 4,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"FULFILLABLE\"    }],    \"shipments\": [{      \"id\": 2262,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2261,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"403-1269002-4868339\",    \"customer_name\": \"vissu\",    \"customer_email\": \"65cr98d4cxds1c2@marketplace.amazon.in\",    \"customer_phone\": \"9949770777\",    \"payment_status\": \"\",    \"total\": \"5290.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 0,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"24 Aug 16, 10:20 AM\",    \"created_at\": \"24 Aug 16, 04:30 PM\",    \"products\": [{      \"id\": 2534,      \"channel_order_product_id\": \"00539831542555\",      \"name\": \"Skil 9080 JF Car Polisher (1300W)\",      \"channel_sku\": \"S-9080\",      \"quantity\": 1,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2261,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2260,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-1943442-9609960\",    \"customer_name\": \"Avinash S Poojary\",    \"customer_email\": \"g1cmpdbbd54xbr3@marketplace.amazon.in\",    \"customer_phone\": \"9916281211\",    \"payment_status\": \"\",    \"total\": \"3115.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"CANCELED\",    \"status_code\": 5,    \"payment_method\": \"cod\",    \"channel_created_at\": \"24 Aug 16, 03:49 AM\",    \"created_at\": \"24 Aug 16, 10:00 AM\",    \"products\": [{      \"id\": 2533,      \"channel_order_product_id\": \"05457018968731\",      \"name\": \"ASP Polyplast Kitchenpride Plastic Round Full Plates , 30Cm , Set of 6 , White\",      \"channel_sku\": \"ASP-001-13\",      \"quantity\": 7,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"CANCELED\"    }],    \"shipments\": [{      \"id\": 2260,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }, {    \"id\": 2256,    \"channel_id\": 91,    \"channel_name\": \"AMAZON_IN\",    \"base_channel_code\": \"AZ\",    \"channel_order_id\": \"171-0317324-3643508\",    \"customer_name\": \"Avinash S Poojary\",    \"customer_email\": \"g1cmpdbbd54xbr3@marketplace.amazon.in\",    \"customer_phone\": \"9916281211\",    \"payment_status\": \"\",    \"total\": \"1395.00\",    \"tax\": \"0.00\",    \"sla\": \"2 days\",    \"shipping_method\": \"SC\",    \"expedited\": 2,    \"status\": \"SHIPPED\",    \"status_code\": 6,    \"payment_method\": \"cod\",    \"channel_created_at\": \"12 Aug 16, 01:10 PM\",    \"created_at\": \"12 Aug 16, 07:31 PM\",    \"products\": [{      \"id\": 2529,      \"channel_order_product_id\": \"28681229839419\",      \"name\": \"ASP Polyplast Kitchenpride Plastic Square Full Plates , 30?30cm , set of 6 ,White\",      \"channel_sku\": \"ASP-001-15\",      \"quantity\": 3,      \"product_id\": null,      \"available\": \"0\",      \"status\": \"UNMAPPED\"    }],    \"shipments\": [{      \"id\": 2256,      \"courier\": \"\",      \"weight\": \"0.5\",      \"dimensions\": \"10x10x10\",      \"awb\": \"\"    }],    \"activities\": [\"ORDER_FETCHED\"]  }],  \"meta\": {    \"pagination\": {      \"total\": 139,      \"count\": 15,      \"per_page\": 15,      \"current_page\": 1,      \"total_pages\": 10,      \"links\": {        \"next\": \"http://krmct001.kartrocket.com/v1/orders?page=2\"      }    }  }}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get all manifested orders1",
            "x-testDescription": "Get a JSON representation of all manifest stage orders"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/count": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get count of orders in unprocessable, processing and manifested tabs",
        "summary": "Get count of orders",
        "operationId": "Get orders count",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOrdersCountResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/count"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"manifested_count\": 4,    \"processing_count\": 22,    \"unprocessing_count\": 1}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get orders count1",
            "x-testDescription": "Get count of orders in unprocessable, processing and manifested tabs"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/show/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get order and shipment details",
        "summary": "Get order Details",
        "operationId": "Get order",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The order id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOrderResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/fetch": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Fetch orders from all channels",
        "summary": "Fetch orders from channels",
        "operationId": "Fetch orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/fetch"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Fetch orders1",
            "x-testDescription": "Fetch orders from all channels"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Start order status sync from all channels",
        "summary": "Get status of sync from channels",
        "operationId": "Sync status",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/status"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Sync status1",
            "x-testDescription": "Start order status sync from all channels"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/cancel": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Cancels orders with given order ids\nDo not use this end point to cancel the order if the order has awb assigned and/or is in pickup stage.\nFor such orders see /v1/external/cancel/labeled or /v1/external/cancel/manifested.",
        "summary": "Cancel an order",
        "operationId": "Cancel orders",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/orders/cancel",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"ids\": [        1,        2,        3    ]}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Cancel orders1",
            "x-testDescription": "Cancels orders with given order ids\nDo not use this end point to cancel the order if the order has awb assigned and/or is in pickup stage.\nFor such orders see /v1/external/cancel/labeled or /v1/external/cancel/manifested."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/fulfill": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Add inventory for order product",
        "summary": "Add inventory",
        "operationId": "Fulfillment",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FulfillmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FulfillmentResponse"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/orders/fulfill",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"data\": [{        \"order_id\": 27581,        \"order_product_id\": 31040,        \"quantity\": \"12\",        \"action\": \"add\"    }, {        \"order_id\": 27543,        \"order_product_id\": 30993,        \"quantity\": \"23\",        \"action\": \"add\"    }, {        \"order_id\": 27544,        \"order_product_id\": 30994,        \"quantity\": \"21\",        \"action\": \"add\"    }, {        \"order_id\": 27544,        \"order_product_id\": 30995,        \"quantity\": \"32\",        \"action\": \"add\"    }]}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[{    \"data\": {        \"order_id\": 27581,        \"order_product_id\": 31040,        \"quantity\": \"12\",        \"action\": \"add\"    },    \"success\": true,    \"message\": \"Successfully Fulfilled\"}, {    \"data\": {        \"order_id\": 27543,        \"order_product_id\": 30993,        \"quantity\": \"23\",        \"action\": \"add\"    },    \"success\": true,    \"message\": \"Successfully Fulfilled\"}, {    \"data\": {        \"order_id\": 27544,        \"order_product_id\": 30994,        \"quantity\": \"21\",        \"action\": \"add\"    },    \"success\": false,    \"message\": \"Incorrect order_id or order status is no longer unfulfillable\"}, {    \"data\": {        \"order_id\": 27544,        \"order_product_id\": 30995,        \"quantity\": \"32\",        \"action\": \"add\"    },    \"success\": false,    \"message\": \"Incorrect order_id or order status is no longer unfulfillable\"}]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Fulfillment1",
            "x-testDescription": "Add inventory for order product"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/mapping": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Map unmapped order products",
        "summary": "Map orders products",
        "operationId": "Mapping",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MappingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MappingResponse"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/orders/mapping",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"data\": [{        \"order_id\": 27544,        \"order_product_id\": 30994,        \"master_sku\": \"APPSHHIP\"    }, {        \"order_id\": 25450,        \"order_product_id\": 28605,        \"master_sku\": \"APPSHHIP\"    }, {        \"order_id\": 25370,        \"order_product_id\": 28515,        \"master_sku\": \"APPSHHIP\"    }, {        \"order_id\": 25372,        \"order_product_id\": 28517,        \"master_sku\": \"APPSHHIP\"    }]}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[{    \"data\": {        \"order_id\": 27544,        \"order_product_id\": 30994,        \"master_sku\": \"APPSHHIP\"    },    \"status_code\": 3,    \"message\": \"Sucessfully Mapped\",    \"success\": true}, {    \"data\": {        \"order_id\": 25450,        \"order_product_id\": 28605,        \"master_sku\": \"APPSHHIP\"    },    \"status_code\": 3,    \"message\": \"Sucessfully Mapped\",    \"success\": true}, {    \"data\": {        \"order_id\": 25370,        \"order_product_id\": 28515,        \"master_sku\": \"APPSHHIP\"    },    \"status_code\": 0,    \"message\": \"Incorrect order_id or order status is  no longer unmapped\",    \"success\": false}, {    \"data\": {        \"order_id\": 25372,        \"order_product_id\": 28517,        \"master_sku\": \"APPSHHIP\"    },    \"status_code\": 0,    \"message\": \"Incorrect order_id or order status is  no longer unmapped\",    \"success\": false}]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Mapping1",
            "x-testDescription": "Map unmapped order products"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/print/invoice": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Generates invoice and returns the PDF url for given order ids",
        "summary": "Generate Invoice",
        "operationId": "Generate invoice",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenerateInvoiceResponse"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/orders/print/invoice",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"ids\": [        1,        2,        3    ]}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    {        \"is_invoice_created\": true,        \"invoice_url\": \"https:\\/\\/s3-ap-southeast-1.amazonaws.com\\/kr-multichannel\\/99\\/invoices\\/TEST-00059.pdf\",        \"not_created\": []    }]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Generate invoice1",
            "x-testDescription": "Generates invoice and returns the PDF url for given order ids"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/track": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get tracking data of all orders",
        "summary": "Get tracking Details",
        "operationId": "Track",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          }, {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }, {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TrackResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/address/update": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Change customer address in order data",
        "summary": "Update address for Order",
        "operationId": "Change address",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/orders/address/update",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"order_id\": 27581,    \"shipping_customer_name\": \"John Doe\",    \"shipping_phone\": \"2728712872\",    \"shipping_address\": \"Navi Mumbai\",    \"shipping_address_2\": \"Ville Parle\",    \"shipping_city\": \"Mumbai\",    \"shipping_state\": \"Maharashtra\",    \"shipping_country\": \"India\",    \"shipping_pincode\": 122001}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Change address1",
            "x-testDescription": "Change customer address in order data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/delivered/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Mark an order delivered, manually",
        "summary": "Mark order as DELIVERED",
        "operationId": "Mark delivered",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The order id to mark delivered"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/export": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Export CSV file containing company's Orders data",
        "operationId": "Export orders",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/orders/export"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Export orders1",
            "x-testDescription": "Export CSV file containing company's Orders data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/print/manifest": {
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Get urls of manifests containing the given order ID",
        "summary": "Get menifest for an order",
        "operationId": "Get manifests",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetManifestsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetManifestsResponse"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/v1/external/orders/print/manifest",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"order_ids\": [        1    ]}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[    {        \"data\": [            \"https://s3-ap-southeast-1.amazonaws.com/kr-multichannel/1/manifest/MAN-00212.pdf\"        ]    }]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get manifests1",
            "x-testDescription": "Get urls of manifests containing the given order ID"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/create": {
      "post": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Create a linked order.",
        "summary": "Create Orders",
        "operationId": "Create linked order.",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLinkedOrder.Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateLinkedOrder.Response"
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/orders/create",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"order_id\": \"123426\",  \"order_date\": \"2016-09-13T18:30:00.000Z\",  \"channel_id\": 89,  \"billing_customer_name\": \"John\",  \"billing_last_name\": \"Doe\",  \"billing_address\": \"Vasant Kunj\",  \"billing_address_2\": \"\",  \"billing_city\": \"Delhi\",  \"billing_state\": \"Delhi\",  \"billing_country\": \"India\",  \"billing_pincode\": \"110064\",  \"billing_email\": \"johndoe@example.com\",  \"billing_phone\": \"9999999999\",  \"shipping_is_billing\": 1,  \"shipping_customer_name\": \"\",  \"shipping_last_name\": \"\",  \"shipping_address\": \"\",  \"shipping_address_2\": \"\",  \"shipping_city\": \"\",  \"shipping_country\": \"India\",  \"shipping_pincode\": \"\",  \"shipping_state\": \"Please Select State\",  \"shipping_email\": \"\",  \"shipping_phone\": \"\",  \"order_items\": [{    \"sku\": \"ABCD123\",    \"units\": \"1\",    \"selling_price\": \"100\",    \"discount\": \"21\"  }],  \"payment_method\": \"COD\",  \"shipping_charges\": \"\",  \"giftwrap_charges\": \"\",  \"transaction_charges\": \"\",  \"total_discount\": \"\",  \"sub_total\": 79}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"status\": \"NEW\",    \"status_code\": \"1\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create linked order.1",
            "x-testDescription": "Create a linked order."
          }, {
            "request": {
              "method": "POST",
              "uri": "/orders/create",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"order_id\": \"123426\",  \"order_date\": \"2016-09-13T18:30:00.000Z\",  \"channel_id\": 89,  \"billing_customer_name\": \"John\",  \"billing_last_name\": \"Doe\",  \"billing_address\": \"Vasant Kunj\",  \"billing_address_2\": \"\",  \"billing_city\": \"Delhi\",  \"billing_state\": \"Delhi\",  \"billing_country\": \"India\",  \"billing_pincode\": \"110064\",  \"billing_email\": \"johndoe@example.com\",  \"billing_phone\": \"9999999999\",  \"shipping_is_billing\": 1,  \"shipping_customer_name\": \"\",  \"shipping_last_name\": \"\",  \"shipping_address\": \"\",  \"shipping_address_2\": \"\",  \"shipping_city\": \"\",  \"shipping_country\": \"India\",  \"shipping_pincode\": \"\",  \"shipping_state\": \"Please Select State\",  \"shipping_email\": \"\",  \"shipping_phone\": \"\",  \"order_items\": [{    \"sku\": \"ABCD123\",    \"units\": \"1\",    \"selling_price\": \"100\",    \"discount\": \"21\"  }],  \"payment_method\": \"COD\",  \"shipping_charges\": \"\",  \"giftwrap_charges\": \"\",  \"transaction_charges\": \"\",  \"total_discount\": \"\",  \"sub_total\": 79}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"status\": \"NEW\",    \"status_code\": \"1\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create linked order.2",
            "x-testDescription": "Create a linked order."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/import": {
      "post": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Import CSV containing orders data",
        "summary": "Import orders in Bulk",
        "operationId": "Bulk import2",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/orders/import",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"file\": \"\u003cfile to import\u003e\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Bulk import1",
            "x-testDescription": "Import CSV containing orders data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/sample": {
      "get": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Export sample import file",
        "summary": "Get sample format for Orders Import",
        "operationId": "Bulk sample1",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/orders/sample"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Bulk sample1",
            "x-testDescription": "Export sample import file"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/create/adhoc": {
      "post": {
        "tags": [
          "Custom Orders"
        ],
        "description": "Create a quick order.",
        "summary": "Create quick orders",
        "operationId": "Create quick order",
        "produces": ["application/json"],
        "parameters": [{
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuickOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateQuickOrderResponse"
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "POST",
              "uri": "/orders/create/adhoc",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"order_id\": \"1231412\",    \"order_date\": \"2017-01-24T10:04:47.347Z\",    \"channel_id\": 9,    \"billing_customer_name\": \"John\",    \"billing_last_name\": \"Doe\",    \"billing_address\": \"29/3 Street 4A, Washington\",    \"billing_address_2\": \"\",    \"billing_city\": \"Washington DC\",    \"billing_state\": \"Washington\",    \"billing_country\": \"United States\",    \"billing_pincode\": \"928302\",    \"billing_email\": \"john@doe.com\",    \"billing_phone\": \"1231232829\",    \"shipping_is_billing\": 1,    \"shipping_customer_name\": \"\",    \"shipping_last_name\": \"\",    \"shipping_address\": \"\",    \"shipping_address_2\": \"\",    \"shipping_city\": \"\",    \"shipping_country\": \"India\",    \"shipping_pincode\": \"\",    \"shipping_state\": \"\",    \"shipping_email\": \"\",    \"shipping_phone\": \"\",    \"order_items\": [{        \"name\": \"Protein Diet\",        \"sku\": \"PDIE\",        \"tax\": \"10\",        \"custom_field\": \"\",        \"units\": \"2\",        \"selling_price\": \"1000\",        \"discount\": \"200\"    }],    \"payment_method\": \"COD\",    \"shipping_charges\": 83,    \"giftwrap_charges\": 0,    \"transaction_charges\": 17,    \"total_discount\": 0,    \"sub_total\": 1600}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"status\": \"NEW\",    \"status_code\": \"1\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create quick order1",
            "x-testDescription": "Create a quick order."
          }, {
            "request": {
              "method": "POST",
              "uri": "/orders/create/adhoc",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"order_id\": \"1231412\",    \"order_date\": \"2017-01-24T10:04:47.347Z\",    \"channel_id\": 9,    \"billing_customer_name\": \"John\",    \"billing_last_name\": \"Doe\",    \"billing_address\": \"29/3 Street 4A, Washington\",    \"billing_address_2\": \"\",    \"billing_city\": \"Washington DC\",    \"billing_state\": \"Washington\",    \"billing_country\": \"United States\",    \"billing_pincode\": \"928302\",    \"billing_email\": \"john@doe.com\",    \"billing_phone\": \"1231232829\",    \"shipping_is_billing\": 1,    \"shipping_customer_name\": \"\",    \"shipping_last_name\": \"\",    \"shipping_address\": \"\",    \"shipping_address_2\": \"\",    \"shipping_city\": \"\",    \"shipping_country\": \"India\",    \"shipping_pincode\": \"\",    \"shipping_state\": \"\",    \"shipping_email\": \"\",    \"shipping_phone\": \"\",    \"order_items\": [{        \"name\": \"Protein Diet\",        \"sku\": \"PDIE\",        \"tax\": \"10\",        \"custom_field\": \"\",        \"units\": \"2\",        \"selling_price\": \"1000\",        \"discount\": \"200\"    }],    \"payment_method\": \"COD\",    \"shipping_charges\": 83,    \"giftwrap_charges\": 0,    \"transaction_charges\": 17,    \"total_discount\": 0,    \"sub_total\": 1600}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"status\": \"NEW\",    \"status_code\": \"1\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create quick order2",
            "x-testDescription": "Create a quick order."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "description": "Get all shipments",
        "summary": "Get shipment Details",
        "operationId": "Get all",
        "produces": ["application/json"],
        "parameters": [{
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }, {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter value"
          }, {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/shipments"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "\"{n    \"data\": [{n            \"number\": \"\",n            \"code\": \"\",n            \"id\": 524,n            \"order_id\": 524,n            \"products\": [{n                \"name\": \"asasd\",n                \"sku\": \"asd\",n                \"quantity\": 1n            }],n            \"awb\": \"784405222612\",n            \"status\": \"DELIVERED\",n            \"created_at\": \"20th Oct 2016 04:40 PM\",n            \"channel_id\": 73,n            \"channel_name\": \"MANUAL\",n            \"base_channel_code\": \"CS\",n            \"payment_method\": \"cod\"n        },n        {n            \"number\": \"\",n            \"code\": \"\",n            \"id\": 526,n            \"order_id\": 526,n            \"products\": [{n                \"name\": \"askjdbb\",n                \"sku\": \"jksdbn\",n                \"quantity\": 1n            }],n            \"awb\": \"172307962\",n            \"status\": \"SHIPPED\",n            \"created_at\": \"20th Oct 2016 05:13 PM\",n            \"channel_id\": 73,n            \"channel_name\": \"MANUAL\",n            \"base_channel_code\": \"CS\",n            \"payment_method\": \"Prepaid\"n        },n    ],n    \"meta\": {n        \"pagination\": {n            \"total\": 2,n            \"count\": 2,n            \"per_page\": 15,n            \"current_page\": 1,n            \"total_pages\": 1,n            \"links\": {n                \"next\": \"\"n            }n        }n    }n}n\""
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get all1",
            "x-testDescription": "Get all shipments"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/shipments/{id}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "description": "Get shipment details",
        "summary": "Get shipment Details of specific orders",
        "operationId": "Details",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The shipment id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailsResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "Get a JSON representation of all products with their inventories",
        "summary": "Get Details of orders with inventories",
        "operationId": "Get inventories",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort type (DESC, ASC)"
          }, {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort by"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetInventoriesResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/inventory/{id}/update": {
      "put": {
        "tags": [
          "Inventory"
        ],
        "description": "Update inventory for a given product",
        "summary": "Update Inventory for a specific product",
        "operationId": "Update inventory",
        "produces": ["application/json"],
        "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Product id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateInventoryResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "description": "Get a list of all channels with details",
        "summary": "Get all channels",
        "operationId": "Get all2",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/serviceability/": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of serviceability of courier companies list with pricing.\nExample is here :- /v1/courier/serviceability?pickup_postcode=110058\u0026delivery_postcode=110030\u0026weight=1.00\u0026cod=0",
        "summary": "Get serviceability of courier companies",
        "operationId": "Check serviceability",
        "produces": ["application/json"],
        "parameters": [{
            "name": "pickup_postcode",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Pickup postcode (must be 6 digits)"
          }, {
            "name": "delivery_postcode",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Delivery postcode (must be 6 digits)"
          }, {
            "name": "weight",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Shipment weight (must be in KG Ex:- 0.50)"
          }, {
            "name": "cod",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "payment method (Ex :- if cash on delivery then cod=1 ,for prepaid then cod=0)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckServiceabilityResponse"
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/pickup/{pickup_postcode}": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of courier companies list where pickup is available.\nExample :- v1/courier/pickup/110030?pickup_couriers[]=14\u0026pickup_couriers[]=10\u0026pickup_couriers[]=12",
        "summary": "Get Pick up availability details",
        "operationId": "Pickup availability",
        "produces": ["application/json"],
        "parameters": [{
            "name": "pickup_postcode",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Pickup postcode of the company (must be 6 digits)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PickupAvailabilityResponse"
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/delivery/{delivery_postcode}": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of courier companies list where delivery is available with 'cash on delivery' indicator (cod) as well.\nExample :- v1/courier/delivery/335513?pickup_couriers[]=14\u0026pickup_couriers[]=10\u0026pickup_couriers[]=12",
        "summary": "Get delivery availability Details",
        "operationId": "Delivery availability",
        "produces": ["application/json"],
        "parameters": [{
            "name": "delivery_postcode",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "delivery postcode (must be 6 digits)"
          }, {
            "name": "pickup_couriers",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Courier company id provided by SHIPROCKET in Pickup availability API"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeliveryAvailabilityResponse"
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/preference": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Set courier companies list with preference (priority) as provided in params below.",
        "summary": "Set courier-company priority",
        "operationId": "Set couriers preferences",
        "produces": ["application/json"],
        "parameters": [{
            "name": "courier_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "Courier company ids provided by SHIPROCKET in Pickup availability API"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetCouriersPreferencesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SetCouriersPreferencesResponse"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/courier/list": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of active courier companies with SHIPROCKET.",
        "summary": "Get active courier companies",
        "operationId": "Get couriers list",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCouriersListResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/courier/courier/list"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{  \"couriers\": [    {      \"id\": 2,      \"courier_name\": \"FEDEX\"    },    {      \"id\": 3,      \"courier_name\": \"ARAMEX\"    },    {      \"id\": 10,      \"courier_name\": \"DELHIVERY\"    },    {      \"id\": 14,      \"courier_name\": \"ECOMEXP\"    }  ]}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get couriers list1",
            "x-testDescription": "Get a JSON representation of active courier companies with SHIPROCKET."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/priority": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of courier companies list with preference (priority) as provided in params below.",
        "summary": "Get courier-company priority",
        "operationId": "Get couriers preferences",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetCouriersPreferencesResponse"
              }
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/courier/priority"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "[  {    \"id\": 11,    \"preference_id\": 1,    \"courier_id\": 3,    \"courier_name\": \"ARAMEX\"  },  {    \"id\": 12,    \"preference_id\": 2,    \"courier_id\": 2,    \"courier_name\": \"FEDEX\"  },  {    \"id\": 13,    \"preference_id\": 3,    \"courier_id\": 10,    \"courier_name\": \"DELHIVERY\"  }]"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get couriers preferences1",
            "x-testDescription": "Get a JSON representation of courier companies list with preference (priority) as provided in params below."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of courier companies list with preference (priority) as provided in params below.",
        "operationId": "Set courier-company priority",
        "produces": ["application/json"],
        "parameters": [{
            "name": "priority",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "Courier company ids provided by SHIPROCKET in Pickup availability API"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetCouriersPriorityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetCouriersPriorityResponse"
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/courier/assign/awb": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of courier awb response for single and bulk awb assignment. Note:- your courier priority must be set, if you are using bulk awb assign method.",
        "summary": "Assgn AWB ",
        "operationId": "Awb creation",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "shipment id provided by SHIPROCKET in order api"
          }, {
            "name": "courier_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Courier company ids provided by SHIPROCKET in courier API (Required only in single awb assign request)"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwbCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbCreationResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/courier/generate/pickup": {
      "post": {
        "tags": [
          "Couriers"
        ],
        "description": "Get a JSON representation of pickup response for single and bulk requests.",
        "summary": "Get Pickup Details",
        "operationId": "Pickup creation",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "shipment id provided by SHIPROCKET in order api"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickupCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PickupCreationResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/generate/label": {
      "post": {
        "tags": [
          "Generate Label"
        ],
        "description": "Get a label URL. Note:- For label URL, AWB code must be assigned on shipment id.",
        "summary": "Generate Label",
        "operationId": "Generate Label",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {},
            "description": "shipment id provided by SHIPROCKET in order api"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateLabelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenerateLabelResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/track/awb/{awb_code}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Get a JSON of tracking data by AWB.",
        "summary": "Get AWB tracking Details",
        "operationId": "AWB Tracking",
        "produces": ["application/json"],
        "parameters": [{
            "name": "awb_code",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "awb code"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwbTrackingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwbTrackingResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/courier/track/shipment/{shipment_id}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "description": "Get a JSON of tracking data by Shipment id.",
        "summary": "Get shipment Tracking Details",
        "operationId": "Shipment Tracking",
        "produces": ["application/json"],
        "parameters": [{
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "Shipment ID"
          }, {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentTrackingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShipmentTrackingResponse"
            }
          },
          "default": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/billing/discrepancy": {
      "get": {
        "tags": [
          "Discrepancy"
        ],
        "description": "Get discrepancy data",
        "summary": "Get discrepancy Details",
        "operationId": "Discrepancy",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscrepancyResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/external/billing/discrepancy"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"status\": \"200\",    \"data\": {        \"id\" : \"21\",        \"assigned_date_time\" : \"\",        \"order_id\" : \"\",        \"channel_order_id\" : \"\",        \"awb_code\" : \"\",        \"courier_name\" : \"\",        \"applied_weight\" : \"\",        \"charged_weight\" : \"\"    },    \"upper_fold_text\": \"The entered weight for the below given shipment was incorrect. Please allow us to make deduction on the basis of correct charged weight as shared by the courier company.\",    \"lower_fild_text\": \"To raise a ticket for your queries, please call us on 011-39595108 or email us at support@shiprocket.com\"}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Discrepancy1",
            "x-testDescription": "Get discrepancy data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/v1/account/details/statement": {
      "get": {
        "tags": [
          "Statement"
        ],
        "description": "Get statements data",
        "summary": "Get shipment Details",
        "operationId": "Satement",
        "produces": ["application/json"],
        "parameters": [{
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Page number of data to display"
          }, {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of orders to get per request"
          }, {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To date"
          }, {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "From date"
          }, {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search for AWB or Channel Order ID"
          }, {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Export the data in csv format"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SatementResponse"
            }
          }
        },
        "x-unitTests": [{
            "request": {
              "method": "GET",
              "uri": "/v1/account/details/statement"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{    \"data\": [{            \"transaction_id\": \"HHMP50963412\",            \"order_id\": \"\",            \"channel_order_id\": \"\",            \"awb_code\": \"\",            \"return_awb_code\": \"\",            \"applied_weight\": 0,            \"charged_weight\": 0,            \"billed_weight\": 0,            \"action\": \"RECHARGE_FAILED\",            \"charge\": \"\",            \"description\": \"Bank ReferenceNo: NA | Canceled By User | Bank Id: HMP | Transaction: HHMP5083963412| Amount: 2.00\",            \"debit_amount\": \"0.00\",            \"credit_amount\": \"0.00\",            \"balance_amount\": \"97213.55\",            \"balance_weight\": 883.5,            \"created_at\": \"2017-01-30 15:15:11\"        },        {            \"transaction_id\": \"A1409\",            \"order_id\": 639,            \"channel_order_id\": \"sayg\",            \"awb_code\": \"785442908641\",            \"return_awb_code\": null,            \"applied_weight\": \"6.00\",            \"charged_weight\": 0,            \"billed_weight\": 0,            \"action\": \"REASSIGN\",            \"charge\": \"189.00\",            \"description\": \"Courier reassign adjustment\",            \"debit_amount\": \"0.00\",            \"credit_amount\": \"328.50\",            \"balance_amount\": \"97213.55\",            \"balance_weight\": 883.5,            \"created_at\": \"2017-01-30 13:29:05\"        },        {            \"transaction_id\": \"A1407\",            \"order_id\": 835,            \"channel_order_id\": \"321938791\",            \"awb_code\": \"851381168\",            \"return_awb_code\": null,            \"applied_weight\": \"3.00\",            \"charged_weight\": 0,            \"billed_weight\": 0,            \"action\": \"WEIGHT_APPLIED\",            \"charge\": \"579.20\",            \"description\": \"AWB assigned\",            \"debit_amount\": \"579.20\",            \"credit_amount\": \"0.00\",            \"balance_amount\": \"96885.05\",            \"balance_weight\": 880.5,            \"created_at\": \"2017-01-30 13:09:31\"        },        {            \"transaction_id\": \"HHMP5083527489\",            \"order_id\": \"\",            \"channel_order_id\": \"\",            \"awb_code\": \"\",            \"return_awb_code\": \"\",            \"applied_weight\": 0,            \"charged_weight\": 0,            \"billed_weight\": 0,            \"action\": \"RECHARGE_FAILED\",            \"charge\": \"\",            \"description\": \"Bank ReferenceNo: 000000 | PBE10002-Do not honour | Bank Id: HMP | Transaction: HHMP5083527489| Amount: 2.00\",            \"debit_amount\": \"0.00\",            \"credit_amount\": \"0.00\",            \"balance_amount\": \"97464.25\",            \"balance_weight\": 886,            \"created_at\": \"2017-01-30 12:38:31\"        }    ],    \"meta\": {        \"pagination\": {            \"total\": 4,            \"count\": 4,            \"per_page\": 15,            \"current_page\": 1,            \"total_pages\": 1,            \"links\": []        }    }}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Satement1",
            "x-testDescription": "Get statements data"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "GetTokenRequest": {
      "title": "Get token request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["email", "password"]
    },
    "GetTokenResponse": {
      "title": "Get token response",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["id", "first_name", "last_name", "email", "company_id", "created_at", "token"]
    },
    "GetCountriesResponse": {
      "title": "Get countries response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "GetZonesResponse": {
      "title": "Get zones response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "GetProductsResponse": {
      "title": "Get products response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "AddRequest": {
      "title": "Add request",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tax_code": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "qty": {
          "type": "string"
        },
        "low_stock": {
          "type": "string"
        },
        "category_code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "length": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "ean": {
          "type": "string"
        },
        "upc": {
          "type": "string"
        },
        "isbn": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "imei_serialnumber": {
          "type": "string"
        },
        "cost_price": {
          "type": "string"
        },
        "mrp": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "image_url": {
          "type": "string"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["sku", "name", "tax_code", "type", "qty", "low_stock", "category_code", "description", "brand", "size", "weight", "length", "width", "height", "ean", "upc", "isbn", "color", "imei_serialnumber", "cost_price", "mrp", "status", "image_url", "components"]
    },
    "ShowResponse": {
      "title": "Show response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "BulkImportRequest": {
      "title": "Bulk import request",
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        }
      },
      "required": ["file"]
    },
    "UpdateImeiRequest": {
      "title": "Update IMEI request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["data"]
    },
    "GetAllResponse": {
      "title": "Get all response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "MapRequest": {
      "title": "Map request",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "listing_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["product_id", "listing_id"]
    },
    "GetAllOrdersResponse": {
      "title": "Get all orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetAllUnprocessableOrdersResponse": {
      "title": "Get all unprocessable orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetAllProcessingOrdersResponse": {
      "title": "Get all processing orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetAllManifestedOrdersResponse": {
      "title": "Get all manifested orders response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "GetOrdersCountResponse": {
      "title": "Get orders count response",
      "type": "object",
      "properties": {
        "manifested_count": {
          "type": "integer",
          "format": "int32"
        },
        "processing_count": {
          "type": "integer",
          "format": "int32"
        },
        "unprocessing_count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["manifested_count", "processing_count", "unprocessing_count"]
    },
    "GetOrderResponse": {
      "title": "Get order response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "CancelOrdersRequest": {
      "title": "Cancel orders request",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["ids"]
    },
    "FulfillmentRequest": {
      "title": "Fulfillment request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["data"]
    },
    "FulfillmentResponse": {
      "title": "Fulfillment response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["data", "success", "message"]
    },
    "MappingRequest": {
      "title": "Mapping request",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["data"]
    },
    "MappingResponse": {
      "title": "Mapping response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "status_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "required": ["data", "status_code", "message", "success"]
    },
    "GenerateInvoiceRequest": {
      "title": "Generate invoice request",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["ids"]
    },
    "GenerateInvoiceResponse": {
      "title": "Generate invoice response",
      "type": "object",
      "properties": {
        "is_invoice_created": {
          "type": "boolean"
        },
        "invoice_url": {
          "type": "string"
        },
        "not_created": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["is_invoice_created", "invoice_url", "not_created"]
    },
    "TrackResponse": {
      "title": "Track response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "ChangeAddressRequest": {
      "title": "Change address request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_customer_name": {
          "type": "string"
        },
        "shipping_phone": {
          "type": "string"
        },
        "shipping_address": {
          "type": "string"
        },
        "shipping_address_2": {
          "type": "string"
        },
        "shipping_city": {
          "type": "string"
        },
        "shipping_state": {
          "type": "string"
        },
        "shipping_country": {
          "type": "string"
        },
        "shipping_pincode": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["order_id", "shipping_customer_name", "shipping_phone", "shipping_address", "shipping_address_2", "shipping_city", "shipping_state", "shipping_country", "shipping_pincode"]
    },
    "GetManifestsRequest": {
      "title": "Get manifests request",
      "type": "object",
      "properties": {
        "order_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["order_ids"]
    },
    "GetManifestsResponse": {
      "title": "Get manifests response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["data"]
    },
    "CreateLinkedOrder.Request": {
      "title": "Create linked order. request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "order_date": {
          "type": "string"
        },
        "channel_id": {
          "type": "integer",
          "format": "int32"
        },
        "billing_customer_name": {
          "type": "string"
        },
        "billing_last_name": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        },
        "billing_address_2": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_state": {
          "type": "string"
        },
        "billing_country": {
          "type": "string"
        },
        "billing_pincode": {
          "type": "string"
        },
        "billing_email": {
          "type": "string"
        },
        "billing_phone": {
          "type": "string"
        },
        "shipping_is_billing": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_customer_name": {
          "type": "string"
        },
        "shipping_last_name": {
          "type": "string"
        },
        "shipping_address": {
          "type": "string"
        },
        "shipping_address_2": {
          "type": "string"
        },
        "shipping_city": {
          "type": "string"
        },
        "shipping_country": {
          "type": "string"
        },
        "shipping_pincode": {
          "type": "string"
        },
        "shipping_state": {
          "type": "string"
        },
        "shipping_email": {
          "type": "string"
        },
        "shipping_phone": {
          "type": "string"
        },
        "order_items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "payment_method": {
          "type": "string"
        },
        "shipping_charges": {
          "type": "string"
        },
        "giftwrap_charges": {
          "type": "string"
        },
        "transaction_charges": {
          "type": "string"
        },
        "total_discount": {
          "type": "string"
        },
        "sub_total": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["order_id", "order_date", "channel_id", "billing_customer_name", "billing_last_name", "billing_address", "billing_address_2", "billing_city", "billing_state", "billing_country", "billing_pincode", "billing_email", "billing_phone", "shipping_is_billing", "shipping_customer_name", "shipping_last_name", "shipping_address", "shipping_address_2", "shipping_city", "shipping_country", "shipping_pincode", "shipping_state", "shipping_email", "shipping_phone", "order_items", "payment_method", "shipping_charges", "giftwrap_charges", "transaction_charges", "total_discount", "sub_total"]
    },
    "CreateLinkedOrder.Response": {
      "title": "Create linked order. response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "status_code": {
          "type": "string"
        }
      },
      "required": ["status", "status_code"]
    },
    "CreateQuickOrderRequest": {
      "title": "Create quick order request",
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string"
        },
        "order_date": {
          "type": "string"
        },
        "channel_id": {
          "type": "integer",
          "format": "int32"
        },
        "billing_customer_name": {
          "type": "string"
        },
        "billing_last_name": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        },
        "billing_address_2": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_state": {
          "type": "string"
        },
        "billing_country": {
          "type": "string"
        },
        "billing_pincode": {
          "type": "string"
        },
        "billing_email": {
          "type": "string"
        },
        "billing_phone": {
          "type": "string"
        },
        "shipping_is_billing": {
          "type": "integer",
          "format": "int32"
        },
        "shipping_customer_name": {
          "type": "string"
        },
        "shipping_last_name": {
          "type": "string"
        },
        "shipping_address": {
          "type": "string"
        },
        "shipping_address_2": {
          "type": "string"
        },
        "shipping_city": {
          "type": "string"
        },
        "shipping_country": {
          "type": "string"
        },
        "shipping_pincode": {
          "type": "string"
        },
        "shipping_state": {
          "type": "string"
        },
        "shipping_email": {
          "type": "string"
        },
        "shipping_phone": {
          "type": "string"
        },
        "order_items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "payment_method": {
          "type": "string"
        },
        "shipping_charges": {
          "type": "integer",
          "format": "int32"
        },
        "giftwrap_charges": {
          "type": "integer",
          "format": "int32"
        },
        "transaction_charges": {
          "type": "integer",
          "format": "int32"
        },
        "total_discount": {
          "type": "integer",
          "format": "int32"
        },
        "sub_total": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["order_id", "order_date", "channel_id", "billing_customer_name", "billing_last_name", "billing_address", "billing_address_2", "billing_city", "billing_state", "billing_country", "billing_pincode", "billing_email", "billing_phone", "shipping_is_billing", "shipping_customer_name", "shipping_last_name", "shipping_address", "shipping_address_2", "shipping_city", "shipping_country", "shipping_pincode", "shipping_state", "shipping_email", "shipping_phone", "order_items", "payment_method", "shipping_charges", "giftwrap_charges", "transaction_charges", "total_discount", "sub_total"]
    },
    "CreateQuickOrderResponse": {
      "title": "Create quick order response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "status_code": {
          "type": "string"
        }
      },
      "required": ["status", "status_code"]
    },
    "DetailsResponse": {
      "title": "Details response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "GetInventoriesResponse": {
      "title": "Get inventories response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    },
    "UpdateInventoryResponse": {
      "title": "Update inventory response",
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "required": ["data"]
    },
    "CheckServiceabilityResponse": {
      "title": "Check serviceability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "PickupAvailabilityResponse": {
      "title": "Pickup availability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "DeliveryAvailabilityResponse": {
      "title": "Delivery availability response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["status", "data"]
    },
    "SetCouriersPreferencesRequest": {
      "title": "Set couriers preferences request",
      "type": "object",
      "properties": {
        "courier_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["courier_id"]
    },
    "SetCouriersPreferencesResponse": {
      "title": "Set couriers preferences response",
      "type": "object",
      "properties": {
        "courier_name": {
          "type": "string"
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        },
        "preference_id": {
          "type": "integer",
          "format": "int32"
        },
        "address_id": {
          "type": "integer",
          "format": "int32"
        },
        "company_id": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string"
        }
      },
      "required": ["courier_name", "courier_id", "preference_id", "address_id", "company_id", "date"]
    },
    "GetCouriersListResponse": {
      "title": "Get couriers list response",
      "type": "object",
      "properties": {
        "couriers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["couriers"]
    },
    "SetCouriersPriorityRequest": {
      "title": "Set couriers priority request",
      "type": "object",
      "properties": {
        "courier_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["courier_id"]
    },
    "SetCouriersPriorityResponse": {
      "title": "Set couriers priority response",
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["status"]
    },
    "GetCouriersPreferencesResponse": {
      "title": "Get couriers preferences response",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "preference_id": {
          "type": "integer",
          "format": "int32"
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        },
        "courier_name": {
          "type": "string"
        }
      },
      "required": ["id", "preference_id", "courier_id", "courier_name"]
    },
    "AwbCreationRequest": {
      "title": "Awb creation request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["shipment_id", "courier_id"]
    },
    "AwbCreationResponse": {
      "title": "Awb creation response",
      "type": "object",
      "properties": {
        "awb_assign_status": {
          "type": "integer",
          "format": "int32"
        },
        "response": {
          "type": "object"
        }
      },
      "required": ["awb_assign_status", "response"]
    },
    "AwbCreationRequest51": {
      "title": "Awb creation request51",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "AwbCreationRequest52": {
      "title": "Awb creation request52",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "courier_id": {
          "type": "integer",
          "format": "int32"
        },
        "weight": {
          "type": "string"
        },
        "manifest_id": {
          "type": "string"
        },
        "channel_order_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "required": ["shipment_id", "courier_id", "weight", "manifest_id", "channel_order_id", "status"]
    },
    "PickupCreationRequest": {
      "title": "Pickup creation request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "PickupCreationResponse": {
      "title": "Pickup creation response",
      "type": "object",
      "properties": {
        "pickup_status": {
          "type": "integer",
          "format": "int32"
        },
        "response": {
          "type": "object"
        },
        "manifest_url": {
          "type": "string"
        }
      },
      "required": ["pickup_status", "response", "manifest_url"]
    },
    "PickupCreationRequest57": {
      "title": "Pickup creation request57",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        ",manifest_id": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        }
      },
      "required": ["shipment_id", ",manifest_id", "status"]
    },
    "GenerateLabelRequest": {
      "title": "Generate Label request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "GenerateLabelResponse": {
      "title": "Generate Label response",
      "type": "object",
      "properties": {
        "label_created": {
          "type": "integer",
          "format": "int32"
        },
        "label_url": {
          "type": "string"
        },
        "response": {
          "type": "string"
        }
      },
      "required": ["label_created", "label_url", "response"]
    },
    "AwbTrackingRequest": {
      "title": "AWB Tracking request",
      "type": "object",
      "properties": {
        "awb_code": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["awb_code"]
    },
    "AwbTrackingResponse": {
      "title": "AWB Tracking response",
      "type": "object",
      "properties": {
        "tracking_data": {
          "type": "object"
        }
      },
      "required": ["tracking_data"]
    },
    "ShipmentTrackingRequest": {
      "title": "Shipment Tracking request",
      "type": "object",
      "properties": {
        "shipment_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["shipment_id"]
    },
    "ShipmentTrackingResponse": {
      "title": "Shipment Tracking response",
      "type": "object",
      "properties": {
        "tracking_data": {
          "type": "object"
        }
      },
      "required": ["tracking_data"]
    },
    "DiscrepancyResponse": {
      "title": "Discrepancy response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "upper_fold_text": {
          "type": "string"
        },
        "lower_fild_text": {
          "type": "string"
        }
      },
      "required": ["status", "data", "upper_fold_text", "lower_fild_text"]
    },
    "SatementResponse": {
      "title": "Satement response",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "meta": {
          "type": "object"
        }
      },
      "required": ["data", "meta"]
    }
  }
}